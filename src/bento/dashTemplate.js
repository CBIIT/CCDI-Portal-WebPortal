import { sortType, InputTypes } from '@bento-core/facet-filter';

const DEMOGRAPHIC = 'Demographic';
const DIAGNOSIS = 'Diagnosis';
// const CASES = 'Cases';
const SAMPLES = 'Samples';
const ASSAYMETHOD = 'Assay Method';
// const FILES = 'Files';
const STUDY = 'Study';
const LIBRARY = 'Library';
const GROUP = 'group';

// --------------- Facet resetIcon link configuration --------------
// Ideal size for resetIcon is 16x16 px
export const resetIcon = {
  src: 'https://raw.githubusercontent.com/CBIIT/datacommons-assets/main/bento/images/icons/svgs/Clear-icon.svg',
  alt: 'Reset icon',
  size: '12 px',
};

// --------------- Dashboard Sidebar Sections styling --------------
export const facetSectionVariables = {
  Demographic: {
    isExpanded: true,
    hasSearch: true,
  },
  Diagnosis: {
    isExpanded: true,
  },
  // Cases: {
  //   isExpanded: true,
  //   hasSearch: true,
  // },
  Samples: {
    isExpanded: true,
  },
  'Assay Method': {
    isExpanded: true,
  },
  Study: {
    isExpanded: true,
  },
  Library: {
    isExpanded: true,
  },
  // Files: {
  //   isExpanded: true,
  // },
};

export const facetsConfig = [
  {
    section: DEMOGRAPHIC,
    label: 'Gender',
    apiPath: 'participantCountByGender',
    apiForFiltering: 'filterParticipantCountByGender',
    datafield: 'gender',
    field: GROUP,
    type: InputTypes.CHECKBOX,
    sort_type: sortType.ALPHABET,
    show: true,
  },
  {
    section: DEMOGRAPHIC,
    label: 'Race',
    apiPath: 'participantCountByRace',
    apiForFiltering: 'filterParticipantCountByRace',
    datafield: 'race',
    field: GROUP,
    type: InputTypes.CHECKBOX,
    sort_type: sortType.ALPHABET,
    show: true,
  },
  {
    section: DEMOGRAPHIC,
    label: 'Ethnicity',
    apiPath: 'participantCountByEthnicity',
    apiForFiltering: 'filterParticipantCountByEthnicity',
    datafield: 'ethnicity',
    field: GROUP,
    type: InputTypes.CHECKBOX,
    sort_type: sortType.ALPHABET,
    show: true,
  },
  {
    section: DIAGNOSIS,
    label: 'Age at diagnois',
    apiPath: 'filterParticipantCountByDiagnosisAge',
    apiForFiltering: 'filterParticipantCountByDiagnosisAge',
    datafield: 'age_at_diagnois',
    ApiLowerBoundName: 'lowerBound',
    ApiUpperBoundName: 'upperBound',
    show: true,
    slider: true,
    type: InputTypes.SLIDER,
    sort_type: 'none',
    minLowerBound: 0,
    maxUpperBound: 100,
    quantifier: 'Years',
  },
  {
    section: DIAGNOSIS,
    label: 'Anatomic Site',
    apiPath: 'participantCountByAnatomicSite',
    apiForFiltering: 'filterParticipantCountByDiagnosisAnatomicSite',
    datafield: 'anatomic_site',
    field: GROUP,
    type: InputTypes.CHECKBOX,
    sort_type: sortType.ALPHABET,
    show: true,
  },
  {
    section: DIAGNOSIS,
    label: 'Disease Phase',
    apiPath: 'participantCountByDiseasePhase',
    apiForFiltering: 'filterParticipantCountByDiseasePhase',
    datafield: 'disease_phase',
    field: GROUP,
    type: InputTypes.CHECKBOX,
    sort_type: sortType.ALPHABET,
    show: true,
  },
  {
    section: DIAGNOSIS,
    label: 'ICD-O',
    apiPath: 'participantCountByICDO',
    apiForFiltering: 'filterParticipantCountByICDO',
    datafield: 'diagnosis_icd_o',
    field: GROUP,
    type: InputTypes.CHECKBOX,
    sort_type: sortType.ALPHABET,
    show: true,
  },
  {
    section: DIAGNOSIS,
    label: 'Vital Status',
    apiPath: 'participantCountByVitalStatus',
    apiForFiltering: 'filterParticipantCountByVitalStatus',
    datafield: 'vital_status',
    field: GROUP,
    type: InputTypes.CHECKBOX,
    sort_type: sortType.ALPHABET,
    show: true,
  },
  {
    section: SAMPLES,
    label: 'Anatomic site',
    apiPath: 'participantCountByDiagnosisAnatomicSite',
    apiForFiltering: 'filterParticipantCountByDiagnosisAnatomicSite',
    datafield: 'anatomic_site',
    field: GROUP,
    type: InputTypes.CHECKBOX,
    sort_type: sortType.ALPHABET,
    show: true,
  },
  {
    section: SAMPLES,
    label: 'Age at collection',
    apiPath: 'filterParticipantCountBySampleAge',
    apiForFiltering: 'filterParticipantCountBySampleAge',
    datafield: 'participant_age_at_collection',
    ApiLowerBoundName: 'lowerBound',
    ApiUpperBoundName: 'upperBound',
    show: true,
    slider: true,
    type: InputTypes.SLIDER,
    sort_type: 'none',
    minLowerBound: 0,
    maxUpperBound: 100,
    quantifier: 'Years',
  },
  {
    section: SAMPLES,
    label: 'Sample tumor status',
    apiPath: 'participantCountByTumorStatus',
    apiForFiltering: 'filterParticipantCountByTumorStatus',
    datafield: 'sample_tumor_status',
    field: GROUP,
    type: InputTypes.CHECKBOX,
    sort_type: sortType.ALPHABET,
    show: true,
  },
  {
    section: SAMPLES,
    label: 'Tumor classification',
    apiPath: 'participantCountByTumorClassification',
    apiForFiltering: 'filterParticipantCountByTumorClassification',
    datafield: 'tumor_classification',
    field: GROUP,
    type: InputTypes.CHECKBOX,
    sort_type: sortType.ALPHABET,
    show: true,
  },
  {
    section: ASSAYMETHOD,
    label: 'Assay Method',
    apiPath: 'ParticipantCountByAssayMethod',
    apiForFiltering: 'filterParticipantCountByAssayMethod',
    datafield: 'assay_method',
    field: GROUP,
    type: InputTypes.CHECKBOX,
    sort_type: sortType.ALPHABET,
    show: true,
  },
  {
    section: ASSAYMETHOD,
    label: 'File Type',
    apiPath: 'participantCountByFileType',
    apiForFiltering: 'filterParticipantCountByFileType',
    datafield: 'file_type',
    field: GROUP,
    type: InputTypes.CHECKBOX,
    sort_type: sortType.ALPHABET,
    show: true,
  },
  {
    section: STUDY,
    label: 'dbGaP phs accession',
    apiPath: 'participantCountByLibrarySelection',
    apiForFiltering: 'filterParticipantCountByLibrarySelection',
    datafield: 'phs_accession',
    field: GROUP,
    type: InputTypes.CHECKBOX,
    sort_type: sortType.ALPHABET,
    show: true,
  },
  {
    section: STUDY,
    label: 'Funding Grant ID',
    apiPath: 'participantCountByGrantID',
    apiForFiltering: 'filterParticipantCountByGrantID',
    datafield: 'grant_id',
    field: GROUP,
    type: InputTypes.CHECKBOX,
    sort_type: sortType.ALPHABET,
    show: true,
  },
  {
    section: STUDY,
    label: 'Institution',
    apiPath: 'participantCountByInstitution',
    apiForFiltering: 'filterParticipantCountByInstitution',
    datafield: 'institution',
    field: GROUP,
    type: InputTypes.CHECKBOX,
    sort_type: sortType.ALPHABET,
    show: true,
  },
  {
    section: STUDY,
    label: 'Name',
    apiPath: 'participantCountByName',
    apiForFiltering: 'filterParticipantCountByName',
    datafield: 'study_name',
    field: GROUP,
    type: InputTypes.CHECKBOX,
    sort_type: sortType.ALPHABET,
    show: true,
  },
  {
    section: STUDY,
    label: 'Acronym',
    apiPath: 'participantCountByAcronym',
    apiForFiltering: 'filterParticipantCountByAcronym',
    datafield: 'study_acronym',
    field: GROUP,
    type: InputTypes.CHECKBOX,
    sort_type: sortType.ALPHABET,
    show: true,
  },
  {
    section: STUDY,
    label: 'Study short title',
    apiPath: 'participantCountByStudyTitle',
    apiForFiltering: 'filterParticipantCountByStudyTitle',
    datafield: 'study_short_title',
    field: GROUP,
    type: InputTypes.CHECKBOX,
    sort_type: sortType.ALPHABET,
    show: true,
  },
  {
    section: LIBRARY,
    label: 'Library selection',
    apiPath: 'participantCountByLibrarySelection',
    apiForFiltering: 'filterParticipantCountByLibrarySelection',
    datafield: 'library_selection',
    field: GROUP,
    type: InputTypes.CHECKBOX,
    sort_type: sortType.ALPHABET,
    show: true,
  },
  {
    section: LIBRARY,
    label: 'Library source',
    apiPath: 'participantCountByLibrarySource',
    apiForFiltering: 'filterParticipantCountByLibrarySource',
    datafield: 'library_source',
    field: GROUP,
    type: InputTypes.CHECKBOX,
    sort_type: sortType.ALPHABET,
    show: true,
  },
  {
    section: LIBRARY,
    label: 'Library strategy',
    apiPath: 'participantCountByLibraryStrategy',
    apiForFiltering: 'filterParticipantCountByLibraryStrategy',
    datafield: 'library_strategy',
    field: GROUP,
    type: InputTypes.CHECKBOX,
    sort_type: sortType.ALPHABET,
    show: true,
  },
  // {
  //   section: CASES,
  //   label: 'Program',
  //   apiPath: 'subjectCountByProgram',
  //   apiForFiltering: 'filterSubjectCountByProgram',
  //   datafield: 'programs',
  //   field: GROUP,
  //   type: InputTypes.CHECKBOX,
  //   sort_type: sortType.ALPHABET,
  //   show: true,
  // },
  // {
  //   section: CASES,
  //   label: 'Arm',
  //   apiPath: 'subjectCountByStudy',
  //   apiForFiltering: 'filterSubjectCountByStudy',
  //   datafield: 'studies',
  //   field: GROUP,
  //   type: InputTypes.CHECKBOX,
  //   sort_type: sortType.ALPHABET,
  //   show: true,
  // },
  // {
  //   section: CASES,
  //   label: 'Diagnosis',
  //   apiPath: 'subjectCountByDiagnoses',
  //   apiForFiltering: 'filterSubjectCountByDiagnoses',
  //   datafield: 'diagnoses',
  //   field: GROUP,
  //   type: InputTypes.CHECKBOX,
  //   sort_type: sortType.ALPHABET,
  //   show: true,
  // },
  // {
  //   section: CASES,
  //   label: 'Recurrence Score',
  //   apiPath: 'subjectCountByRecurrenceScore',
  //   apiForFiltering: 'filterSubjectCountByRecurrenceScore',
  //   datafield: 'rc_scores',
  //   field: GROUP,
  //   type: InputTypes.CHECKBOX,
  //   sort_type: sortType.RANGE,
  //   show: true,
  // },
  // {
  //   section: CASES,
  //   label: 'Tumor Size',
  //   apiPath: 'subjectCountByTumorSize',
  //   apiForFiltering: 'filterSubjectCountByTumorSize',
  //   datafield: 'tumor_sizes',
  //   field: GROUP,
  //   type: InputTypes.CHECKBOX,
  //   sort_type: sortType.CUSTOM_NUMBER,
  //   show: true,
  // },
  // {
  //   section: CASES,
  //   label: 'Chemotherapy',
  //   apiPath: 'subjectCountByChemotherapyRegimen',
  //   apiForFiltering: 'filterSubjectCountByChemotherapyRegimen',
  //   datafield: 'chemo_regimen',
  //   field: GROUP,
  //   type: InputTypes.CHECKBOX,
  //   sort_type: sortType.ALPHABET,
  //   show: true,
  // },
  // {
  //   section: CASES,
  //   label: 'Tumor Grade',
  //   apiPath: 'subjectCountByTumorGrade',
  //   apiForFiltering: 'filterSubjectCountByTumorGrade',
  //   datafield: 'tumor_grades',
  //   field: GROUP,
  //   type: InputTypes.CHECKBOX,
  //   sort_type: sortType.ALPHABET,
  //   show: true,
  // },
  // {
  //   section: CASES,
  //   label: 'ER Status',
  //   apiPath: 'subjectCountByErStatus',
  //   apiForFiltering: 'filterSubjectCountByErStatus',
  //   datafield: 'er_status',
  //   field: GROUP,
  //   type: InputTypes.CHECKBOX,
  //   sort_type: sortType.ALPHABET,
  //   show: true,
  // },
  // {
  //   section: CASES,
  //   label: 'PR Status',
  //   apiPath: 'subjectCountByPrStatus',
  //   apiForFiltering: 'filterSubjectCountByPrStatus',
  //   datafield: 'pr_status',
  //   field: GROUP,
  //   type: InputTypes.CHECKBOX,
  //   sort_type: sortType.ALPHABET,
  //   show: true,
  // },
  // {
  //   section: CASES,
  //   label: 'Endocrine Therapy',
  //   apiPath: 'subjectCountByEndocrineTherapy',
  //   apiForFiltering: 'filterSubjectCountByEndocrineTherapy',
  //   datafield: 'endo_therapies',
  //   field: GROUP,
  //   type: InputTypes.CHECKBOX,
  //   sort_type: sortType.ALPHABET,
  //   show: true,
  // },
  // {
  //   section: CASES,
  //   label: 'Menopause Status',
  //   apiPath: 'subjectCountByMenopauseStatus',
  //   apiForFiltering: 'filterSubjectCountByMenopauseStatus',
  //   datafield: 'meno_status',
  //   field: GROUP,
  //   type: InputTypes.CHECKBOX,
  //   sort_type: sortType.ALPHABET,
  //   show: true,
  // },
  // {
  //   section: CASES,
  //   label: 'Age',
  //   apiPath: 'filterSubjectCountByAge',
  //   apiForFiltering: 'filterSubjectCountByAge',
  //   datafield: 'age_at_index',
  //   ApiLowerBoundName: 'lowerBound',
  //   ApiUpperBoundName: 'upperBound',
  //   show: true,
  //   slider: true,
  //   type: InputTypes.SLIDER,
  //   sort_type: 'none',
  //   minLowerBound: 0,
  //   maxUpperBound: 100,
  //   quantifier: 'Years',
  // },
  // {
  //   section: SAMPLES,
  //   label: 'Tissue Type',
  //   apiPath: 'subjectCountByTissueType',
  //   apiForFiltering: 'filterSubjectCountByTissueType',
  //   datafield: 'tissue_type',
  //   field: GROUP,
  //   type: InputTypes.CHECKBOX,
  //   sort_type: sortType.ALPHABET,
  //   show: true,
  // },
  // {
  //   section: SAMPLES,
  //   label: 'Tissue Composition',
  //   apiPath: 'subjectCountByTissueComposition',
  //   apiForFiltering: 'filterSubjectCountByTissueComposition',
  //   datafield: 'composition',
  //   field: GROUP,
  //   type: InputTypes.CHECKBOX,
  //   sort_type: sortType.ALPHABET,
  //   show: true,
  // },
  // {
  //   section: FILES,
  //   label: 'File Association',
  //   apiPath: 'subjectCountByFileAssociation',
  //   apiForFiltering: 'filterSubjectCountByFileAssociation',
  //   datafield: 'association',
  //   field: GROUP,
  //   type: InputTypes.CHECKBOX,
  //   sort_type: sortType.ALPHABET,
  //   show: true,
  // },
  // {
  //   section: FILES,
  //   label: 'File Type',
  //   apiPath: 'subjectCountByFileType',
  //   apiForFiltering: 'filterSubjectCountByFileType',
  //   datafield: 'file_type',
  //   field: GROUP,
  //   type: InputTypes.CHECKBOX,
  //   sort_type: sortType.ALPHABET,
  //   show: true,
  // },
];

// --------------- Dashboard Widgets configuration --------------
// Sunburst chart color scheme
export const SUNBURST_COLORS_LEVEL_1 = [
  '#7dc242',
  '#274fa5',
  '#79287c',
  '#f78f48',
  '#057ebd',
];

export const SUNBURST_COLORS_LEVEL_2 = [
  '#057ebd',
  '#f78f48',
  '#79287c',
  '#0e3151',
  '#057ebd',
  '#7dc242',
];

// A maximum of 6 widgets are allowed
// for donuts only the following are required: type, title, dataName
//
// type: 'sunburst' | 'donut'
// title: string
// dataName: string
// datatable_level1_field: string
// datatable_level1_colors: string[]
// datatable_level2_field: string
// datatable_level2_colors: string[]
// sliceTitle: string (optional)
export const widgetConfig = [
  // {
  //   type: 'sunburst',
  //   title: 'Programs and Arms',
  //   dataName: 'armsByPrograms',
  //   datatable_level1_field: 'program',
  //   datatable_level1_colors: SUNBURST_COLORS_LEVEL_1,
  //   datatable_level2_field: 'arm',
  //   datatable_level2_colors: SUNBURST_COLORS_LEVEL_2,
  // },
  {
    type: 'sunburst',
    title: 'Study',
    dataName: 'participantCountByStudy',
    datatable_level1_field: 'category',
    datatable_level1_colors: SUNBURST_COLORS_LEVEL_1,
    datatable_level2_field: 'study',
    datatable_level2_colors: SUNBURST_COLORS_LEVEL_2,
  },
  // {
  //   type: 'donut',
  //   title: 'Study',
  //   dataName: 'participantCountByStudy',
  // },
  {
    type: 'donut',
    title: 'Race',
    dataName: 'participantCountByRace',
  },
  {
    type: 'donut',
    title: 'Ethnicity',
    dataName: 'participantCountByEthnicity',
  },
  {
    type: 'donut',
    title: 'Diagnosis Age',
    dataName: 'participantCountByDiagnosisAge',
  },
  {
    type: 'donut',
    title: 'Diagnosis',
    dataName: 'participantCountByDiagnosis',
  },
  {
    type: 'donut',
    title: 'Gender',
    dataName: 'participantCountByGender',
  },
];
